// you can use this file to add your custom webpack plugins, loaders and anything you like.
// This is just the basic way to add addional webpack configurations.
// For more information refer the docs: https://goo.gl/qPbSyX

// IMPORTANT
// When you add this file, we won't add the default configurations which is similar
// to "React Create App". This only has babel loader to load JavaScript.

// Webpack configuration file
const CommonConfig = require('../webpack.common.config')
const webpack = require('webpack')
const merge = require('webpack-merge')

let config = CommonConfig
// Reset loaders
config.module.loaders = []
config.module.plugins = []
config = merge(config, {
  plugins: [
    new webpack.DefinePlugin({
      'process.env': {
        NODE_ENV: JSON.stringify('development'),
      },
      GATEWAY_HOSTNAME: JSON.stringify('http://localhost:8000'),
    }),
    // your custom plugins
    new webpack.ProvidePlugin({ React: 'react' }),
  ],
  module: {
    loaders: [
      // Transpile ES6 Javascript into ES5 with babel loader
      {
        test: /\.jsx?$/,
        exclude: [/node_modules/, /json/],
        loader: 'babel',
      },
      {
        test: /\.css?$/,
        exclude: [/node_modules/, /json/],
        loaders: [
          require.resolve('style-loader'),
          require.resolve('css-loader'),
          require.resolve('postcss-loader'),
        ],
      },
      {
        test: /\.(jpg|gif|eot|svg|ttf|woff|woff2)(\?.*)?$/,
        exclude: [/node_modules/, /json/],
        loader: require.resolve('file-loader'),
        query: {
          name: 'static/media/[name].[hash:8].[ext]',
        },
      },
      {
        test: /\.png$/,
        loader: 'url-loader',
        query: { mimetype: 'image/png' },
      },
      {
        test: /\.json$/,
        exclude: [/node_modules/],
        loader: 'json-loader',
      },
    ],
  },
  devServer: {
    // Enable rewrite urls for navigation routes generated by the router.
    // Necessary to fallback to root directory when attempt to load
    // webpack generated javascripts.
    historyApiFallback: {
      // Rewrite to get bundle.js
      rewrites: [{
        from: /\/bundle\.js(\.map)?/,
        to(context) {
          return context.match[0]
        },
      },
      ],
    },
  },
})

module.exports = config
