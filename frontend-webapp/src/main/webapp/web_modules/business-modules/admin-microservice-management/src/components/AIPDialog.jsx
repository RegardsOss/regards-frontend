import {
  Table,
  TableHeader,
  TableRow,
  TableHeaderColumn,
  TableBody,
  TableRowColumn,
} from 'material-ui/Table'
import Dialog from 'material-ui/Dialog'
import IconButton from 'material-ui/IconButton'
import List from 'material-ui/svg-icons/action/list'
import FlatButton from 'material-ui/FlatButton'
import { FormattedMessage } from 'react-intl'
import { Card, CardTitle, CardActions, CardText, CardMedia } from 'material-ui/Card'
import { i18nContextType } from '@regardsoss/i18n'
import { themeContextType } from '@regardsoss/theme'

/**
   * Copyright 2017 CNES - CENTRE NATIONAL d'ETUDES SPATIALES
   *
   * This file is part of REGARDS.
   *
   * REGARDS is free software: you can redistribute it and/or modify
   * it under the terms of the GNU General Public License as published by
   * the Free Software Foundation, either version 3 of the License, or
   * (at your option) any later version.
   *
   * REGARDS is distributed in the hope that it will be useful,
   * but WITHOUT ANY WARRANTY; without even the implied warranty of
   * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
   * GNU General Public License for more details.
   *
   * You should have received a copy of the GNU General Public License
   * along with REGARDS. If not, see <http://www.gnu.org/licenses/>.
   **/

/**
  * Dialog showing the list of AIPs generated by a given SIP
  * @author Maxime Bouveron
  */
class AIPDialog extends React.Component {
  static propTypes = {
    open: PropTypes.bool,
    onRequestClose: PropTypes.func,
  }

  static contextTypes = {
    // enable plugin theme access through this.context
    ...themeContextType,
    // enable i18n access trhough this.context
    ...i18nContextType,
  }

  static defaultProps = {}

  render() {
    const { intl, moduleTheme: { sip } } = this.context
    return (
      <Dialog
        title={intl.formatMessage({ id: 'microservice-management.sips.list.aip-details.title' })}
        modal={false}
        open={this.props.open}
        onRequestClose={this.props.onRequestClose}
        autoScrollBodyContent
      >
        {[...Array(5).keys()].map(item => (
          <Card key={item} style={sip.list.aipDialog}>
            <CardTitle actAsExpander showExpandableButton title="AIP_234" />
            <CardText>Status: Error</CardText>
            <CardMedia expandable>
              <Table>
                <TableHeader
                  adjustForCheckbox={false}
                  displaySelectAll={false}
                  enableSelectAll={false}
                >
                  <TableHeaderColumn>
                    <FormattedMessage id="microservice-management.sips.list.aip-details.table.files.headers.name" />
                  </TableHeaderColumn>
                  <TableHeaderColumn>
                    <FormattedMessage id="microservice-management.sips.list.aip-details.table.files.headers.size" />
                  </TableHeaderColumn>
                  <TableHeaderColumn>
                    <FormattedMessage id="microservice-management.sips.list.aip-details.table.files.headers.actions" />
                  </TableHeaderColumn>
                </TableHeader>
                <TableBody displayRowCheckbox={false}>
                  <TableRow>
                    <TableRowColumn>machintrucchouette.pdf</TableRowColumn>
                    <TableRowColumn>45kb</TableRowColumn>
                    <TableRowColumn>
                      <IconButton title="View things and stuff">
                        <List />
                      </IconButton>
                    </TableRowColumn>
                  </TableRow>
                </TableBody>
              </Table>
            </CardMedia>
            <CardActions>
              <FlatButton label="Retry" />
            </CardActions>
          </Card>
        ))}
      </Dialog>
    )
  }
}
export default AIPDialog
