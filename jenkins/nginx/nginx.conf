worker_processes auto;

pid /run/nginx.pid;

events {
    worker_connections 4096;
    use                epoll;
    multi_accept       on;
}

http {
    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;
    # Docker embedded DNS server https://stackoverflow.com/questions/35744650/docker-network-nginx-resolver
    # https://stackoverflow.com/a/46664433/2294168
    # Set a variable then use it in proxy_pass to avoid DNS issue with docker swarm
    resolver 127.0.0.11 ipv6=off valid=10s;

    include      /etc/nginx/mime.types;
    default_type application/octet-stream;

    access_log /var/log/nginx/access.log combined;
    error_log /var/log/nginx/error.log error;

    gzip         on;
    gzip_disable "msie6";

    client_max_body_size 100M;

    server {
        listen 8080 default_server;

        location ~ ^(/zuul)?/api/v1/((?:rs-admin/|rs-admin-instance/|rs-dam/|rs-dataprovider/|rs-ingest/|rs-storage/).*)$ {
            set $upstream http://rs-gateway:9030$1/api/v1/$2$is_args$args;
            # Refuse requests if they contains /user/ but not when they contains /admin/
            set $test O;
            if ($http_referer ~ /admin/){
                set $test NO;   
            }
            if ($http_referer ~ /user/) {
                set $test "${test}K";
            }
            if ($test = OK){
                return 412;
            }
            proxy_pass $upstream;
            # Set headers
            proxy_set_header X-Forwarded-Host $host:$server_port;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $http_connection;
        }

        location ~ ^(/zuul)?/api/v1/((?!(?:rs-admin/|rs-admin-instance/|rs-dam/|rs-dataprovider/|rs-ingest/|rs-storage/)).*)$ {
            set $upstream http://rs-gateway:9030$1/api/v1/$2$is_args$args;
            proxy_pass $upstream;
            # Set headers
            proxy_set_header X-Forwarded-Host $host:$server_port;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $http_connection;
        }

        location / {
            root /var/www;
            # Always serve index.html for any request
            try_files $uri /index.html;
            
            # kill cache
            add_header Last-Modified $date_gmt;
            add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
            if_modified_since off;
            expires off;
            etag off;
        }
    }

}